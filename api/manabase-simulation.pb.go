// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: api/manabase-simulation.proto

package api

import (
	_ "github.com/ysugimoto/grpc-graphql-gateway/graphql"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManaColor int32

const (
	ManaColor_WHITE     ManaColor = 0
	ManaColor_BLUE      ManaColor = 1
	ManaColor_BLACK     ManaColor = 2
	ManaColor_RED       ManaColor = 3
	ManaColor_GREEN     ManaColor = 4
	ManaColor_COLORLESS ManaColor = 5
)

// Enum value maps for ManaColor.
var (
	ManaColor_name = map[int32]string{
		0: "WHITE",
		1: "BLUE",
		2: "BLACK",
		3: "RED",
		4: "GREEN",
		5: "COLORLESS",
	}
	ManaColor_value = map[string]int32{
		"WHITE":     0,
		"BLUE":      1,
		"BLACK":     2,
		"RED":       3,
		"GREEN":     4,
		"COLORLESS": 5,
	}
)

func (x ManaColor) Enum() *ManaColor {
	p := new(ManaColor)
	*p = x
	return p
}

func (x ManaColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManaColor) Descriptor() protoreflect.EnumDescriptor {
	return file_api_manabase_simulation_proto_enumTypes[0].Descriptor()
}

func (ManaColor) Type() protoreflect.EnumType {
	return &file_api_manabase_simulation_proto_enumTypes[0]
}

func (x ManaColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManaColor.Descriptor instead.
func (ManaColor) EnumDescriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{0}
}

type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_api_manabase_simulation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{0}
}

func (x *EchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_api_manabase_simulation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{1}
}

func (x *EchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SimulateDeckRequest Represents the request to simulate a deck.
type SimulateDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckList          string             `protobuf:"bytes,1,opt,name=deckList,proto3" json:"deckList,omitempty"`
	GameConfiguration *GameConfiguration `protobuf:"bytes,2,opt,name=gameConfiguration,proto3" json:"gameConfiguration,omitempty"`
	Objective         *Objective         `protobuf:"bytes,3,opt,name=objective,proto3" json:"objective,omitempty"`
}

func (x *SimulateDeckRequest) Reset() {
	*x = SimulateDeckRequest{}
	mi := &file_api_manabase_simulation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateDeckRequest) ProtoMessage() {}

func (x *SimulateDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateDeckRequest.ProtoReflect.Descriptor instead.
func (*SimulateDeckRequest) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{2}
}

func (x *SimulateDeckRequest) GetDeckList() string {
	if x != nil {
		return x.DeckList
	}
	return ""
}

func (x *SimulateDeckRequest) GetGameConfiguration() *GameConfiguration {
	if x != nil {
		return x.GameConfiguration
	}
	return nil
}

func (x *SimulateDeckRequest) GetObjective() *Objective {
	if x != nil {
		return x.Objective
	}
	return nil
}

type SimulateDeckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string              `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SuccessRate float32             `protobuf:"fixed32,2,opt,name=successRate,proto3" json:"successRate,omitempty"`
	Checkpoints []*ResultCheckpoint `protobuf:"bytes,3,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	DeckStats   *DeckStats          `protobuf:"bytes,4,opt,name=deckStats,proto3" json:"deckStats,omitempty"`
}

func (x *SimulateDeckResponse) Reset() {
	*x = SimulateDeckResponse{}
	mi := &file_api_manabase_simulation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateDeckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateDeckResponse) ProtoMessage() {}

func (x *SimulateDeckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateDeckResponse.ProtoReflect.Descriptor instead.
func (*SimulateDeckResponse) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{3}
}

func (x *SimulateDeckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SimulateDeckResponse) GetSuccessRate() float32 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *SimulateDeckResponse) GetCheckpoints() []*ResultCheckpoint {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

func (x *SimulateDeckResponse) GetDeckStats() *DeckStats {
	if x != nil {
		return x.DeckStats
	}
	return nil
}

type ValidateDeckListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckList string `protobuf:"bytes,1,opt,name=deckList,proto3" json:"deckList,omitempty"`
}

func (x *ValidateDeckListRequest) Reset() {
	*x = ValidateDeckListRequest{}
	mi := &file_api_manabase_simulation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDeckListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDeckListRequest) ProtoMessage() {}

func (x *ValidateDeckListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDeckListRequest.ProtoReflect.Descriptor instead.
func (*ValidateDeckListRequest) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateDeckListRequest) GetDeckList() string {
	if x != nil {
		return x.DeckList
	}
	return ""
}

type ValidateDeckListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid      bool           `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
	InvalidCards []*InvalidCard `protobuf:"bytes,2,rep,name=invalidCards,proto3" json:"invalidCards,omitempty"`
}

func (x *ValidateDeckListResponse) Reset() {
	*x = ValidateDeckListResponse{}
	mi := &file_api_manabase_simulation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDeckListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDeckListResponse) ProtoMessage() {}

func (x *ValidateDeckListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDeckListResponse.ProtoReflect.Descriptor instead.
func (*ValidateDeckListResponse) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateDeckListResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateDeckListResponse) GetInvalidCards() []*InvalidCard {
	if x != nil {
		return x.InvalidCards
	}
	return nil
}

type InvalidCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *InvalidCard) Reset() {
	*x = InvalidCard{}
	mi := &file_api_manabase_simulation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidCard) ProtoMessage() {}

func (x *InvalidCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidCard.ProtoReflect.Descriptor instead.
func (*InvalidCard) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{6}
}

func (x *InvalidCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvalidCard) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ManaCost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorRequirements []ManaColor `protobuf:"varint,1,rep,packed,name=colorRequirements,proto3,enum=manabase_simulation.ManaColor" json:"colorRequirements,omitempty"`
	GenericCost       int32       `protobuf:"varint,2,opt,name=genericCost,proto3" json:"genericCost,omitempty"`
}

func (x *ManaCost) Reset() {
	*x = ManaCost{}
	mi := &file_api_manabase_simulation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManaCost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManaCost) ProtoMessage() {}

func (x *ManaCost) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManaCost.ProtoReflect.Descriptor instead.
func (*ManaCost) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{7}
}

func (x *ManaCost) GetColorRequirements() []ManaColor {
	if x != nil {
		return x.ColorRequirements
	}
	return nil
}

func (x *ManaCost) GetGenericCost() int32 {
	if x != nil {
		return x.GenericCost
	}
	return 0
}

type SimplifiedManaCost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhiteMana     int32 `protobuf:"varint,1,opt,name=whiteMana,proto3" json:"whiteMana,omitempty"`
	BlueMana      int32 `protobuf:"varint,2,opt,name=blueMana,proto3" json:"blueMana,omitempty"`
	BlackMana     int32 `protobuf:"varint,3,opt,name=blackMana,proto3" json:"blackMana,omitempty"`
	RedMana       int32 `protobuf:"varint,4,opt,name=redMana,proto3" json:"redMana,omitempty"`
	GreenMana     int32 `protobuf:"varint,5,opt,name=greenMana,proto3" json:"greenMana,omitempty"`
	ColorlessMana int32 `protobuf:"varint,6,opt,name=colorlessMana,proto3" json:"colorlessMana,omitempty"`
	GenericCost   int32 `protobuf:"varint,7,opt,name=genericCost,proto3" json:"genericCost,omitempty"`
}

func (x *SimplifiedManaCost) Reset() {
	*x = SimplifiedManaCost{}
	mi := &file_api_manabase_simulation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimplifiedManaCost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimplifiedManaCost) ProtoMessage() {}

func (x *SimplifiedManaCost) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimplifiedManaCost.ProtoReflect.Descriptor instead.
func (*SimplifiedManaCost) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{8}
}

func (x *SimplifiedManaCost) GetWhiteMana() int32 {
	if x != nil {
		return x.WhiteMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetBlueMana() int32 {
	if x != nil {
		return x.BlueMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetBlackMana() int32 {
	if x != nil {
		return x.BlackMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetRedMana() int32 {
	if x != nil {
		return x.RedMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetGreenMana() int32 {
	if x != nil {
		return x.GreenMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetColorlessMana() int32 {
	if x != nil {
		return x.ColorlessMana
	}
	return 0
}

func (x *SimplifiedManaCost) GetGenericCost() int32 {
	if x != nil {
		return x.GenericCost
	}
	return 0
}

type Objective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetTurn int32       `protobuf:"varint,1,opt,name=targetTurn,proto3" json:"targetTurn,omitempty"`
	ManaCosts  []*ManaCost `protobuf:"bytes,2,rep,name=manaCosts,proto3" json:"manaCosts,omitempty"`
}

func (x *Objective) Reset() {
	*x = Objective{}
	mi := &file_api_manabase_simulation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Objective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Objective) ProtoMessage() {}

func (x *Objective) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Objective.ProtoReflect.Descriptor instead.
func (*Objective) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{9}
}

func (x *Objective) GetTargetTurn() int32 {
	if x != nil {
		return x.TargetTurn
	}
	return 0
}

func (x *Objective) GetManaCosts() []*ManaCost {
	if x != nil {
		return x.ManaCosts
	}
	return nil
}

type GameConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialHandSize   int32 `protobuf:"varint,1,opt,name=initialHandSize,proto3" json:"initialHandSize,omitempty"`
	CardsDrawnPerTurn int32 `protobuf:"varint,2,opt,name=cardsDrawnPerTurn,proto3" json:"cardsDrawnPerTurn,omitempty"`
	OnThePlay         bool  `protobuf:"varint,3,opt,name=onThePlay,proto3" json:"onThePlay,omitempty"`
}

func (x *GameConfiguration) Reset() {
	*x = GameConfiguration{}
	mi := &file_api_manabase_simulation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfiguration) ProtoMessage() {}

func (x *GameConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfiguration.ProtoReflect.Descriptor instead.
func (*GameConfiguration) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{10}
}

func (x *GameConfiguration) GetInitialHandSize() int32 {
	if x != nil {
		return x.InitialHandSize
	}
	return 0
}

func (x *GameConfiguration) GetCardsDrawnPerTurn() int32 {
	if x != nil {
		return x.CardsDrawnPerTurn
	}
	return 0
}

func (x *GameConfiguration) GetOnThePlay() bool {
	if x != nil {
		return x.OnThePlay
	}
	return false
}

type ResultCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iterations int32 `protobuf:"varint,1,opt,name=iterations,proto3" json:"iterations,omitempty"`
	Successes  int32 `protobuf:"varint,2,opt,name=successes,proto3" json:"successes,omitempty"`
}

func (x *ResultCheckpoint) Reset() {
	*x = ResultCheckpoint{}
	mi := &file_api_manabase_simulation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCheckpoint) ProtoMessage() {}

func (x *ResultCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCheckpoint.ProtoReflect.Descriptor instead.
func (*ResultCheckpoint) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{11}
}

func (x *ResultCheckpoint) GetIterations() int32 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

func (x *ResultCheckpoint) GetSuccesses() int32 {
	if x != nil {
		return x.Successes
	}
	return 0
}

type DeckStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCards    int32               `protobuf:"varint,1,opt,name=totalCards,proto3" json:"totalCards,omitempty"`
	Lands         int32               `protobuf:"varint,2,opt,name=lands,proto3" json:"lands,omitempty"`
	NonLands      int32               `protobuf:"varint,3,opt,name=nonLands,proto3" json:"nonLands,omitempty"`
	TotalManaPips *SimplifiedManaCost `protobuf:"bytes,4,opt,name=totalManaPips,proto3" json:"totalManaPips,omitempty"`
}

func (x *DeckStats) Reset() {
	*x = DeckStats{}
	mi := &file_api_manabase_simulation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeckStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeckStats) ProtoMessage() {}

func (x *DeckStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_manabase_simulation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeckStats.ProtoReflect.Descriptor instead.
func (*DeckStats) Descriptor() ([]byte, []int) {
	return file_api_manabase_simulation_proto_rawDescGZIP(), []int{12}
}

func (x *DeckStats) GetTotalCards() int32 {
	if x != nil {
		return x.TotalCards
	}
	return 0
}

func (x *DeckStats) GetLands() int32 {
	if x != nil {
		return x.Lands
	}
	return 0
}

func (x *DeckStats) GetNonLands() int32 {
	if x != nil {
		return x.NonLands
	}
	return 0
}

func (x *DeckStats) GetTotalManaPips() *SimplifiedManaCost {
	if x != nil {
		return x.TotalManaPips
	}
	return nil
}

var File_api_manabase_simulation_proto protoreflect.FileDescriptor

var file_api_manabase_simulation_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x36, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0b,
	0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xc5, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x18, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x44, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x7a, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x4c, 0x0a,
	0x11, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x22, 0xec, 0x01,
	0x0a, 0x12, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x4d,
	0x61, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x65, 0x65, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x09,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x6e,
	0x61, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61,
	0x6e, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x64, 0x73, 0x44,
	0x72, 0x61, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x63, 0x61, 0x72, 0x64, 0x73, 0x44, 0x72, 0x61, 0x77, 0x6e, 0x50, 0x65, 0x72,
	0x54, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x22, 0x50, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x4c,
	0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x4c,
	0x61, 0x6e, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x6e,
	0x61, 0x50, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x43, 0x6f, 0x73, 0x74, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x50,
	0x69, 0x70, 0x73, 0x2a, 0x4e, 0x0a, 0x09, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x09, 0x0a, 0x05, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x4c, 0x55, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x4c, 0x45, 0x53,
	0x53, 0x10, 0x05, 0x32, 0x8c, 0x03, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x04, 0x45, 0x63, 0x68,
	0x6f, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xba, 0x43, 0x06, 0x12, 0x04, 0x65, 0x63, 0x68,
	0x6f, 0x12, 0x72, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63,
	0x6b, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xba, 0x43, 0x0a, 0x12, 0x08, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0xba, 0x43, 0x0a, 0x12, 0x08, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x2b, 0xba, 0x43, 0x28, 0x0a, 0x24, 0x6d, 0x74, 0x67, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x2d, 0x73, 0x69, 0x6d, 0x2d, 0x61, 0x70, 0x70, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x39, 0x30, 0x30, 0x30,
	0x10, 0x01, 0x42, 0x19, 0x5a, 0x17, 0x6d, 0x61, 0x6e, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_manabase_simulation_proto_rawDescOnce sync.Once
	file_api_manabase_simulation_proto_rawDescData = file_api_manabase_simulation_proto_rawDesc
)

func file_api_manabase_simulation_proto_rawDescGZIP() []byte {
	file_api_manabase_simulation_proto_rawDescOnce.Do(func() {
		file_api_manabase_simulation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_manabase_simulation_proto_rawDescData)
	})
	return file_api_manabase_simulation_proto_rawDescData
}

var file_api_manabase_simulation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_manabase_simulation_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_manabase_simulation_proto_goTypes = []any{
	(ManaColor)(0),                   // 0: manabase_simulation.ManaColor
	(*EchoRequest)(nil),              // 1: manabase_simulation.EchoRequest
	(*EchoResponse)(nil),             // 2: manabase_simulation.EchoResponse
	(*SimulateDeckRequest)(nil),      // 3: manabase_simulation.SimulateDeckRequest
	(*SimulateDeckResponse)(nil),     // 4: manabase_simulation.SimulateDeckResponse
	(*ValidateDeckListRequest)(nil),  // 5: manabase_simulation.ValidateDeckListRequest
	(*ValidateDeckListResponse)(nil), // 6: manabase_simulation.ValidateDeckListResponse
	(*InvalidCard)(nil),              // 7: manabase_simulation.InvalidCard
	(*ManaCost)(nil),                 // 8: manabase_simulation.ManaCost
	(*SimplifiedManaCost)(nil),       // 9: manabase_simulation.SimplifiedManaCost
	(*Objective)(nil),                // 10: manabase_simulation.Objective
	(*GameConfiguration)(nil),        // 11: manabase_simulation.GameConfiguration
	(*ResultCheckpoint)(nil),         // 12: manabase_simulation.ResultCheckpoint
	(*DeckStats)(nil),                // 13: manabase_simulation.DeckStats
}
var file_api_manabase_simulation_proto_depIdxs = []int32{
	11, // 0: manabase_simulation.SimulateDeckRequest.gameConfiguration:type_name -> manabase_simulation.GameConfiguration
	10, // 1: manabase_simulation.SimulateDeckRequest.objective:type_name -> manabase_simulation.Objective
	12, // 2: manabase_simulation.SimulateDeckResponse.checkpoints:type_name -> manabase_simulation.ResultCheckpoint
	13, // 3: manabase_simulation.SimulateDeckResponse.deckStats:type_name -> manabase_simulation.DeckStats
	7,  // 4: manabase_simulation.ValidateDeckListResponse.invalidCards:type_name -> manabase_simulation.InvalidCard
	0,  // 5: manabase_simulation.ManaCost.colorRequirements:type_name -> manabase_simulation.ManaColor
	8,  // 6: manabase_simulation.Objective.manaCosts:type_name -> manabase_simulation.ManaCost
	9,  // 7: manabase_simulation.DeckStats.totalManaPips:type_name -> manabase_simulation.SimplifiedManaCost
	1,  // 8: manabase_simulation.ManabaseSimulator.Echo:input_type -> manabase_simulation.EchoRequest
	3,  // 9: manabase_simulation.ManabaseSimulator.SimulateDeck:input_type -> manabase_simulation.SimulateDeckRequest
	5,  // 10: manabase_simulation.ManabaseSimulator.ValidateDeckList:input_type -> manabase_simulation.ValidateDeckListRequest
	2,  // 11: manabase_simulation.ManabaseSimulator.Echo:output_type -> manabase_simulation.EchoResponse
	4,  // 12: manabase_simulation.ManabaseSimulator.SimulateDeck:output_type -> manabase_simulation.SimulateDeckResponse
	6,  // 13: manabase_simulation.ManabaseSimulator.ValidateDeckList:output_type -> manabase_simulation.ValidateDeckListResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_manabase_simulation_proto_init() }
func file_api_manabase_simulation_proto_init() {
	if File_api_manabase_simulation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_manabase_simulation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_manabase_simulation_proto_goTypes,
		DependencyIndexes: file_api_manabase_simulation_proto_depIdxs,
		EnumInfos:         file_api_manabase_simulation_proto_enumTypes,
		MessageInfos:      file_api_manabase_simulation_proto_msgTypes,
	}.Build()
	File_api_manabase_simulation_proto = out.File
	file_api_manabase_simulation_proto_rawDesc = nil
	file_api_manabase_simulation_proto_goTypes = nil
	file_api_manabase_simulation_proto_depIdxs = nil
}
